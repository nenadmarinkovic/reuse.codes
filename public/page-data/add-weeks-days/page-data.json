{"componentChunkName":"component---src-templates-directory-js","path":"/add-weeks-days/","result":{"data":{"mdx":{"frontmatter":{"title":"Add Weeks To Days","date":"2020 November 7th","category":"javascript"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add Weeks To Days\",\n  \"date\": \"2020-11-07T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"javascript\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Calculates the date after adding the ginen number of business days.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.from()\"), \" to construct an array with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"length\"), \" equal to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"count\"), \" of business days to be added.\\nUse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.prototype.reduce()\"), \" to iterate over the array, starting from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"startDate\"), \" and incrementing, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date.prototype.getDate()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date.prototype.setDate()\"), \".\\nIf the current \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"date\"), \" is on a weekend, update it again by adding either one day or two days to make it a weekday.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const addWeekDays = (startDate, count) =>\\n  Array.from({ length: count }).reduce(date => {\\n    date = new Date(date.setDate(date.getDate() + 1));\\n    if (date.getDay() % 6 === 0)\\n      date = new Date(date.setDate(date.getDate() + (date.getDay() / 6 + 1)));\\n    return date;\\n  }, startDate);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"addWeekDays(new Date('Oct 09, 2020'), 5); // 'Oct 16, 2020'\\naddWeekDays(new Date('Oct 12, 2020'), 5); // 'Oct 19, 2020'\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Calculates the date after adding the ginen number of business days. Use  Array.from()  to construct an array with  length  equal to the…","fields":{"slug":"/add-weeks-days/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/javascript/add-weeks-days.mdx"}}},"pageContext":{"slug":"/add-weeks-days/","previous":{"id":"83901cd2-edd8-5b3f-a2a2-0e0ac7602d15","excerpt":"Calculates the date of  n  days from the given date, returning its string representation. Use  new Date()  to create a date object from the first argument. Use  Date.prototype.getDate()  and  Date.prototype.setDate()  to add  n  days to the given…","frontmatter":{"title":"Add Days To Date","date":"2020-11-07T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/add-days-to-date/"}},"next":{"id":"45690c1a-ac6d-5a62-a40a-d0be72b489d2","excerpt":"Checks if all elements in an array are equal. Use  Array.prototype.every()  to check if all the elements of the array are the same as the first one.\nElements in the array are compared using the strict comparison operator, which does not account for…","frontmatter":{"title":"Are elements equal?","date":"2020-11-07T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/are-equal/"}}}},"staticQueryHashes":["4278130389"]}