{"componentChunkName":"component---src-templates-directory-js","path":"/add-weeks-days/","result":{"data":{"mdx":{"frontmatter":{"title":"Add Weeks To Days","date":"2020 November 7th","category":"javascript"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add Weeks To Days\",\n  \"date\": \"2020-11-07T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"javascript\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Calculates the date after adding the ginen number of business days.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.from()\"), \" to construct an array with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"length\"), \" equal to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"count\"), \" of business days to be added.\\nUse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.prototype.reduce()\"), \" to iterate over the array, starting from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"startDate\"), \" and incrementing, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date.prototype.getDate()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Date.prototype.setDate()\"), \".\\nIf the current \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"date\"), \" is on a weekend, update it again by adding either one day or two days to make it a weekday.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const addWeekDays = (startDate, count) =>\\n  Array.from({ length: count }).reduce(date => {\\n    date = new Date(date.setDate(date.getDate() + 1));\\n    if (date.getDay() % 6 === 0)\\n      date = new Date(date.setDate(date.getDate() + (date.getDay() / 6 + 1)));\\n    return date;\\n  }, startDate);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"addWeekDays(new Date('Oct 09, 2020'), 5); // 'Oct 16, 2020'\\naddWeekDays(new Date('Oct 12, 2020'), 5); // 'Oct 19, 2020'\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Calculates the date after adding the ginen number of business days. Use  Array.from()  to construct an array with  length  equal to the…","fields":{"slug":"/add-weeks-days/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/javascript/add-weeks-days.mdx"}}},"pageContext":{"slug":"/add-weeks-days/","previous":{"id":"4226cfb9-0d00-54ce-b446-dde1f47d3933","excerpt":"Calculates the date of  n  days from the given date, returning its string representation. Use  new Date()  to create a date object from the first argument.\nUse  Date.prototype.getDate()  and  Date.prototype.setDate()  to add  n  days to the given…","frontmatter":{"title":"Add Days To Date","date":"2020-11-07T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/add-days-to-date/"}},"next":{"id":"416eac39-f338-5235-b6ec-79530b415263","excerpt":"Remove duplicates.","frontmatter":{"title":"Remove Duplicate from an Array","date":"2020-11-09T00:00:00.000Z","category":"html"},"fields":{"slug":"/turn-off-autocomplete/"}}}},"staticQueryHashes":["4278130389"]}