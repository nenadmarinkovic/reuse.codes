{"componentChunkName":"component---src-templates-directory-js","path":"/are-equal/","result":{"data":{"mdx":{"frontmatter":{"title":"Are elements equal?","date":"2020 November 7th","category":"javascript"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Are elements equal?\",\n  \"date\": \"2020-11-07T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"javascript\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Checks if all elements in an array are equal.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.prototype.every()\"), \" to check if all the elements of the array are the same as the first one.\\nElements in the array are compared using the strict comparison operator, which does not account for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NaN\"), \" self-inequality.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const allEqual = arr => arr.every(val => val === arr[0]);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"allEqual([1, 2, 3, 4, 5, 6]); // false\\nallEqual([1, 1, 1, 1]); // true\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Checks if all elements in an array are equal. Use  Array.prototype.every()  to check if all the elements of the array are the same as the…","fields":{"slug":"/are-equal/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/javascript/are-equal.mdx"}}},"pageContext":{"slug":"/are-equal/","previous":{"id":"04c4e286-9541-51e5-8c3f-512a583a6fae","excerpt":"Capitalizes the first letter of a string. Use array destructuring and  String.prototype.toUpperCase()  to capitalize the first letter of the string.\nUse  Array.prototype.join('')  to combine the capitalized  first  with the  ...rest  of the…","frontmatter":{"title":"Capitalize First Letter","date":"2020-11-07T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/capitalize/"}},"next":{"id":"2aadc402-9a28-5910-b29a-18f4a9e50dc2","excerpt":"Calculates the date after adding the ginen number of business days. Use  Array.from()  to construct an array with  length  equal to the  count  of business days to be added.\nUse  Array.prototype.reduce()  to iterate over the array, starting from…","frontmatter":{"title":"Add Weeks To Days","date":"2020-11-07T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/add-weeks-days/"}}}},"staticQueryHashes":["4278130389"]}