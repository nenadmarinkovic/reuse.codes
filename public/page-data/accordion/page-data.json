{"componentChunkName":"component---src-templates-directory-js","path":"/accordion/","result":{"data":{"mdx":{"frontmatter":{"title":"React Accordion","date":"2020 November 17th","category":"react"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"React Accordion\",\n  \"date\": \"2020-11-17T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"react\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Renders an accordion menu with multiple collapsible content elements.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".accordion-item.collapsed {\\n  display: none;\\n}\\n\\n.accordion-item.expanded {\\n  display: block;\\n}\\n\\n.accordion-button {\\n  display: block;\\n  width: 100%;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const AccordionItem = ({ label, isCollapsed, handleClick, children }) => {\\n  return (\\n    <>\\n      <button className=\\\"accordion-button\\\" onClick={handleClick}>\\n        {label}\\n      </button>\\n      <div\\n        className={`accordion-item ${isCollapsed ? 'collapsed' : 'expanded'}`}\\n        aria-expanded={isCollapsed}\\n      >\\n        {children}\\n      </div>\\n    </>\\n  );\\n};\\n\\nconst Accordion = ({ defaultIndex, onItemClick, children }) => {\\n  const [bindIndex, setBindIndex] = React.useState(defaultIndex);\\n\\n  const changeItem = itemIndex => {\\n    if (typeof onItemClick === 'function') onItemClick(itemIndex);\\n    if (itemIndex !== bindIndex) setBindIndex(itemIndex);\\n  };\\n  const items = children.filter(item => item.type.name === 'AccordionItem');\\n\\n  return (\\n    <>\\n      {items.map(({ props }) => (\\n        <AccordionItem\\n          isCollapsed={bindIndex !== props.index}\\n          label={props.label}\\n          handleClick={() => changeItem(props.index)}\\n          children={props.children}\\n        />\\n      ))}\\n    </>\\n  );\\n};\\n\\nReactDOM.render(\\n  <Accordion defaultIndex=\\\"1\\\" onItemClick={console.log}>\\n    <AccordionItem label=\\\"A\\\" index=\\\"1\\\">\\n      Lorem ipsum\\n    </AccordionItem>\\n    <AccordionItem label=\\\"B\\\" index=\\\"2\\\">\\n      Dolor sit amet\\n    </AccordionItem>\\n  </Accordion>,\\n  document.getElementById('root')\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Renders an accordion menu with multiple collapsible content elements.","fields":{"slug":"/accordion/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/react/accordion.mdx"}}},"pageContext":{"slug":"/accordion/","previous":{"id":"416eac39-f338-5235-b6ec-79530b415263","excerpt":"Remove duplicates.","frontmatter":{"title":"Remove Duplicate from an Array","date":"2020-11-09T00:00:00.000Z","category":"html"},"fields":{"slug":"/turn-off-autocomplete/"}},"next":{"id":"03856499-ffce-5dec-8576-63590b7c415b","excerpt":"Open link in a new tab.","frontmatter":{"title":"Open a new tab","date":"2020-12-05T00:00:00.000Z","category":"html"},"fields":{"slug":"/open-new-tab/"}}}},"staticQueryHashes":["4278130389"]}