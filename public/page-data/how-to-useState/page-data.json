{"componentChunkName":"component---src-templates-directory-js","path":"/how-to-useState/","result":{"data":{"mdx":{"frontmatter":{"title":"Setup JSX support in emmet","date":"2020 January 17th","category":"react"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setup JSX support in emmet\",\n  \"date\": \"2020-01-17T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"react\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"You might need to add this additional step to your VS-Code settings to support JSX in VS-Code, even though Emmet is nativly supported out of the box\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import Document from 'next/document'\\nimport { ServerStyleSheet } from 'styled-components'\\n\\nexport default class MyDocument extends Document {\\n  static async getInitialProps(ctx) {\\n    const sheet = new ServerStyleSheet()\\n    const originalRenderPage = ctx.renderPage\\n\\n    try {\\n      ctx.renderPage = () =>\\n        originalRenderPage({\\n          enhanceApp: (App) => (props) =>\\n            sheet.collectStyles(<App {...props} />),\\n        })\\n\\n      const initialProps = await Document.getInitialProps(ctx)\\n      return {\\n        ...initialProps,\\n        styles: (\\n          <>\\n            {initialProps.styles}\\n            {sheet.getStyleElement()}\\n          </>\\n        ),\\n      }\\n    } finally {\\n      sheet.seal()\\n    }\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"","fields":{"slug":"/how-to-useState/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/react/how-to-useState.mdx"}}},"pageContext":{"slug":"/how-to-useState/","previous":{"id":"0c354fbb-5638-582d-ae51-6f8ae6418b75","excerpt":"AAA","frontmatter":{"title":"Setup JSX support in emmet","date":"2020-01-17T00:00:00.000Z","category":"react"},"fields":{"slug":"/new-react/"}},"next":{"id":"8fd8a8ef-d42f-59cf-aee8-4454f8259061","excerpt":"","frontmatter":{"title":"Setup JSX support in emmet","date":"2020-01-17T00:00:00.000Z","category":"node"},"fields":{"slug":"/jsx-support-emmet/"}}}},"staticQueryHashes":["4278130389"]}