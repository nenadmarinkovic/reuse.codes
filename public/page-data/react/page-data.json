{"componentChunkName":"component---src-templates-answer-layout-js","path":"/react/","result":{"data":{"mdx":{"frontmatter":{"title":"How to useState","date":"2019 December 5th","category":"react","author":"Nenad Marinkovic"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"A basic example of how to use useState. Below is a live playground where you can edit the code. Try changing the count increment\"), \"#ILJA ```js\", mdx(\"p\", null, \"function App() {\\nconst \", \"[newTodoValue, setNewTodoValue]\", \" = useState(\\\"\\\")\\nconst \", \"[todosList, setTodosList]\", \" = useState([])\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"function handleChange(event) {\\n    setNewTodoValue(event.target.value)\\n}\\n\\nfunction addTodo(event) {\\n    event.preventDefault()\\n    setTodosList(prevTodosList => [...prevTodosList, newTodoValue])\\n    setNewTodoValue(\\\"\\\")\\n}\\n\\nconst allTodos = todosList.map(todo => <p key={todo}>{todo}</p>)\\n\\nreturn (\\n    <div>\\n        <form>\\n            <input type=\\\"text\\\" name=\\\"todo\\\" value={newTodoValue} onChange={handleChange}/>\\n            <button onClick={addTodo}>Add todo item</button>\\n        </form>\\n        {allTodos}\\n    </div>\\n)\\n\")), mdx(\"p\", null, \"}\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\n\\nexport const _frontmatter = {\\\"title\\\":\\\"How to useState\\\",\\\"date\\\":\\\"2019-12-05T00:00:00.000Z\\\",\\\"published\\\":true,\\\"category\\\":\\\"react\\\",\\\"author\\\":\\\"Nenad Marinkovic\\\"}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"function App() {\n    const  newTodoValue, setNewTodoValue  = useState(\"\")\n    const  todosList, setTodosList  = useState([]) }","fields":{"slug":"/react/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/masterF:/#F Nenad Marinkovic/reuse.codes/content/react/react.mdx"}}},"pageContext":{"slug":"/react/","previous":{"id":"a7eb79a5-199e-5441-8a64-828dd4f26715","excerpt":"","frontmatter":{"title":"How to useState","date":"2019-12-05T00:00:00.000Z","category":"react","author":"Nenad Marinkovic"},"fields":{"slug":"/how-to-useState/"}},"next":{"id":"d259931e-3f6f-591f-948e-fbe50fb510d6","excerpt":"","frontmatter":{"title":"Open a new tab","date":"2019-12-05T00:00:00.000Z","category":"html","author":"Nenad Marinkovic"},"fields":{"slug":"/open-new-tab/"}}}},"staticQueryHashes":["4278130389"]}