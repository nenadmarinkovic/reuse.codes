{"componentChunkName":"component---src-templates-directory-js","path":"/nvm-command-not-found/","result":{"data":{"mdx":{"frontmatter":{"title":"If nvm doesn't load every time in the terminal (command not found)","date":"2021 March 1st","category":"node"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"If nvm doesn't load every time in the terminal (command not found)\",\n  \"date\": \"2021-03-01T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"node\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If there is an 'nvm not found error' whenever new terminal is opened, just follow this instructions.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"\\u279C  ~ nvm --version\\nzsh: command not found: nvm\\n\")), mdx(\"p\", null, \"Than load .bash_profile\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"code ~/.bash_profile\\n\")), mdx(\"p\", null, \"Than write this code inside:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"export NVM_DIR=\\\"$HOME/.nvm\\\"\\n[ -s \\\"$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"$NVM_DIR/nvm.sh\\\"\\n[ -s \\\"$NVM_DIR/bash_completion\\\" ] && \\\\. \\\"$NVM_DIR/bash_completion\\\"\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"If there is an 'nvm not found error' whenever new terminal is opened, just follow this instructions. Than load .bash_profile Than write thisâ€¦","fields":{"slug":"/nvm-command-not-found/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/node/nvm-command-not-found.mdx"}}},"pageContext":{"slug":"/nvm-command-not-found/","previous":{"id":"8664c83b-898a-5a23-aa1a-2de93f59aad4","excerpt":"Creating new branch from master branch.","frontmatter":{"title":"Create new branch from master","date":"2021-02-26T00:00:00.000Z","category":"git"},"fields":{"slug":"/create-new-branch/"}},"next":{"id":"4c3f37ba-d91f-5de9-b796-7c12f626fd03","excerpt":"Ignore .DS_Store file in all repositories.","frontmatter":{"title":"Ignore .DS_Store in all repositories","date":"2021-03-01T00:00:00.000Z","category":"git"},"fields":{"slug":"/ds-store-ignore/"}}}},"staticQueryHashes":["4278130389"]}