{"componentChunkName":"component---src-templates-directory-js","path":"/is-node/","result":{"data":{"mdx":{"frontmatter":{"title":"Is Node?","date":"2020 January 17th","category":"node"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Is Node?\",\n  \"date\": \"2020-01-17T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"node\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Determines if the current runtime environment is Node.js.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const isNode = () =>\\n  typeof process !== 'undefined' &&\\n  process.versions !== null &&\\n  process.versions.node !== null;\\n\\nisNode(); // true (Node)\\nisNode(); // false (browser)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Determines if the current runtime environment is Node.js.","fields":{"slug":"/is-node/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/node/is-node.mdx"}}},"pageContext":{"slug":"/is-node/","previous":{"id":"2b450d52-8df0-5aa9-bf3c-e33a56560b7d","excerpt":"Place this code snippet in your functions.php file to reject all malicious URL requests.","frontmatter":{"title":"WP | Reject malicious URL requests","date":"2020-01-13T00:00:00.000Z","category":"cms"},"fields":{"slug":"/malicious-url-requests/"}},"next":{"id":"ca0ba338-7708-5390-87ac-90d05e0befdd","excerpt":"Create a custom hook that takes a url and options.\nUse the useState() hook to initialize the response and error state variables.\nUse the useEffect() hook to anychronously call fetch() and update the state variables accordingly.\nReturn an objectâ€¦","frontmatter":{"title":"useFetch","date":"2020-01-17T00:00:00.000Z","category":"react"},"fields":{"slug":"/use-fetch/"}}}},"staticQueryHashes":["4278130389"]}