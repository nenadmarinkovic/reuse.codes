{"componentChunkName":"component---src-templates-directory-js","path":"/wordpress-contributors-add-images/","result":{"data":{"mdx":{"frontmatter":{"title":"Show Popular Posts Without Plugins","date":"2020 March 14th","category":"cms"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Show Popular Posts Without Plugins\",\n  \"date\": \"2020-03-14T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"cms\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Showcase popular posts\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"function count_post_visits() {\\n    if( is_single() ) {\\n        global $post;\\n        $views = get_post_meta( $post->ID, 'my_post_viewed', true );\\n        if( $views == '' ) {\\n            update_post_meta( $post->ID, 'my_post_viewed', '1' );   \\n        } else {\\n            $views_no = intval( $views );\\n            update_post_meta( $post->ID, 'my_post_viewed', ++$views_no );\\n        }\\n    }\\n}\\nadd_action( 'wp_head', 'count_post_visits' );\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Showcase popular posts","fields":{"slug":"/wordpress-contributors-add-images/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/cms/wordpress-contributors-add-images.mdx"}}},"pageContext":{"slug":"/wordpress-contributors-add-images/","previous":{"id":"a393f01a-d690-5c7d-83ef-b46249895952","excerpt":"Working PHP Contact Form for small projects.","frontmatter":{"title":"PHP Contact Form","date":"2020-02-06T00:00:00.000Z","category":"cms"},"fields":{"slug":"/add-existing-project-to-git/"}},"next":{"id":"3d73538d-842c-53cd-a199-060947131694","excerpt":"This hook allows you to detect clicks outside of a specified element. In the example below we use it to close a modal when any element outside of the modal is clicked. By abstracting this logic out into a hook we can easily use it across all of ourâ€¦","frontmatter":{"title":"useOnClickOutside","date":"2020-05-15T00:00:00.000Z","category":"react"},"fields":{"slug":"/on-click-outside/"}}}},"staticQueryHashes":["4278130389"]}