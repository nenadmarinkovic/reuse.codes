{"componentChunkName":"component---src-templates-directory-js","path":"/new-react/","result":{"data":{"mdx":{"frontmatter":{"title":"Setup JSX support in emmet","date":"2020 January 17th","category":"react"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Setup JSX support in emmet\",\n  \"date\": \"2020-01-17T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"react\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"AAA\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"/** @jsx jsx */\\nimport { jsx } from \\\"../context\\\";\\nimport { graphql } from \\\"gatsby\\\";\\nimport { LayoutLibrary } from \\\"../components/LayoutLibrary\\\";\\nimport AnswersIndexWrapper from \\\"../components/AnswersIndexWrapper\\\";\\nimport SEO from \\\"gatsby-theme-seo/src/components/seo\\\";\\nimport { useSearchBar } from \\\"../useSearchBar\\\";\\nimport SearchBar from \\\"../components/SearchBar\\\";\\nimport PageTransition from \\\"gatsby-plugin-page-transitions\\\";\\n\\nconst SEODescription = `\\n  Reusable code snippets for web developers and designers.\\n`;\\n\\nconst SEOKeywords = [\\n  \\\"Web Developer\\\",\\n  \\\"Frontend Developer\\\",\\n  \\\"React\\\",\\n  \\\"Gatsby\\\",\\n  \\\"GIT\\\",\\n  \\\"JavaScript\\\",\\n  \\\"CSS\\\",\\n  \\\"HTML\\\",\\n];\\nexport default ({ data }) => {\\n  const { answers, handleSearchQuery } = useSearchBar(data);\\n  return (\\n    <LayoutLibrary>\\n      <SEO\\n        title=\\\"React\\\"\\n        description={SEODescription}\\n        keywords={SEOKeywords}\\n      />\\n      <PageTransition>\\n        <SearchBar category=\\\"react\\\" handleSearchQuery={handleSearchQuery} />\\n        <AnswersIndexWrapper answers={answers} />\\n      </PageTransition>\\n    </LayoutLibrary>\\n  );\\n};\\n\\nexport const query = graphql`\\n  query REACT_INDEX_QUERY {\\n    allMdx(\\n      sort: { fields: [frontmatter___date], order: DESC }\\n      filter: {\\n        frontmatter: { published: { eq: true }, category: { eq: \\\"react\\\" } }\\n      }\\n    ) {\\n      nodes {\\n        id\\n        excerpt(pruneLength: 250)\\n        frontmatter {\\n          title\\n          date(formatString: \\\"YYYY MMMM Do\\\")\\n          category\\n        }\\n        fields {\\n          slug\\n        }\\n      }\\n    }\\n  }\\n`;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"AAA","fields":{"slug":"/new-react/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/react/new-react.mdx"}}},"pageContext":{"slug":"/new-react/","previous":{"id":"97f11be8-e757-5196-bc62-3e55933aa58f","excerpt":"","frontmatter":{"title":"Setup JSX support in emmet","date":"2020-01-17T00:00:00.000Z","category":"react"},"fields":{"slug":"/how-to-useState/"}},"next":null}},"staticQueryHashes":["4278130389"]}