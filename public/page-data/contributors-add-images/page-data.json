{"componentChunkName":"component---src-templates-directory-js","path":"/contributors-add-images/","result":{"data":{"mdx":{"frontmatter":{"title":"Wordpress | Allow Contributors to Upload Images","date":"2020 April 2nd","category":"cms"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Wordpress | Allow Contributors to Upload Images\",\n  \"date\": \"2020-04-02T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"cms\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"code snippet allows contributor accounts to upload images to their articles, without granting them any additional privileges or rights. Paste it in the functions.php file of your theme\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-php\"\n  }), \"if ( current_user_can('contributor') && !current_user_can('upload_files') )\\n     add_action('admin_init', 'allow_contributor_uploads');      \\n     function allow_contributor_uploads() {\\n          $contributor = get_role('contributor');\\n          $contributor->add_cap('upload_files');\\n     }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"code snippet allows contributor accounts to upload images to their articles, without granting them any additional privileges or rights…","fields":{"slug":"/contributors-add-images/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/cms/contributors-add-images.mdx"}}},"pageContext":{"slug":"/contributors-add-images/","previous":{"id":"a393f01a-d690-5c7d-83ef-b46249895952","excerpt":"Working PHP Contact Form for small projects.","frontmatter":{"title":"PHP Contact Form","date":"2020-02-06T00:00:00.000Z","category":"cms"},"fields":{"slug":"/add-existing-project-to-git/"}},"next":{"id":"3d73538d-842c-53cd-a199-060947131694","excerpt":"This hook allows you to detect clicks outside of a specified element. In the example below we use it to close a modal when any element outside of the modal is clicked. By abstracting this logic out into a hook we can easily use it across all of our…","frontmatter":{"title":"useOnClickOutside","date":"2020-05-15T00:00:00.000Z","category":"react"},"fields":{"slug":"/on-click-outside/"}}}},"staticQueryHashes":["4278130389"]}