{"componentChunkName":"component---src-templates-directory-js","path":"/addMultipleEvents/","result":{"data":{"mdx":{"frontmatter":{"title":"addMultipleListeners","date":"2019 December 6th","category":"react"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"addMultipleListeners\",\n  \"date\": \"2019-12-06T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"react\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Adds multiple event listeners with the same handler to an element.\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Array.prototype.forEach()\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EventTarget.addEventListener()\"), \" to add multiple event listeners with an assigned callback function to an element.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const addMultipleListeners = (el, types, listener, options, useCapture) => {\\n  types.forEach(type =>\\n    el.addEventListener(type, listener, options, useCapture)\\n  );\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"addMultipleListeners(\\n  document.querySelector('.my-element'),\\n  ['click', 'mousedown'],\\n  () => { console.log('hello!') }\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Adds multiple event listeners with the same handler to an element. Use  Array.prototype.forEach()  and  EventTarget.addEventListener()  toâ€¦","fields":{"slug":"/addMultipleEvents/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/react/addMultipleEvents.mdx"}}},"pageContext":{"slug":"/addMultipleEvents/","previous":{"id":"a1879c4c-2299-5e66-88f7-43fdd13359a9","excerpt":"Just don't use IE.","frontmatter":{"title":"Detect Internet Explorer","date":"2019-12-06T00:00:00.000Z","category":"javascript"},"fields":{"slug":"/detect-ie/"}},"next":{"id":"361ac2fa-1489-5dd3-8ded-bcdc6ebff15c","excerpt":"","frontmatter":{"title":"Yes, but why","date":"2019-12-06T00:00:00.000Z","category":"sass"},"fields":{"slug":"/why/"}}}},"staticQueryHashes":["4278130389"]}