{"componentChunkName":"component---src-templates-directory-js","path":"/create-new-branch/","result":{"data":{"mdx":{"frontmatter":{"title":"Create new branch from master","date":"2021 February 26th","category":"git"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create new branch from master\",\n  \"date\": \"2021-02-26T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"git\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Creating new branch from master branch.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"git checkout -b \\\"branch name\\\"\\ngit add .\\ngit commit -m \\\"description\\\"\\ngit push #it will push to a new branch\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Creating new branch from master branch.","fields":{"slug":"/create-new-branch/","editLink":"https://github.com/nenadmarinkovic/reuse.codes/edit/master/content/git/create-new-branch.mdx"}}},"pageContext":{"slug":"/create-new-branch/","previous":{"id":"ca3ba9e1-8d06-5220-b1e2-4850c4f8f24a","excerpt":"If there is an 'nvm not found error', just follow this instructions. To open the bash file in vscode use: To open the zsh file in vscode use:","frontmatter":{"title":"Changing Node version if there is an 'nvm not found' error","date":"2021-02-26T00:00:00.000Z","category":"node"},"fields":{"slug":"/change-node-version/"}},"next":{"id":"4ac5444a-4194-5e8d-9201-93bce97c92eb","excerpt":"If there is an 'nvm not found error' whenever new terminal is opened, just follow this instructions. Than load .bash_profile Than write this code inside:","frontmatter":{"title":"If nvm doesn't load every time in the terminal (command not found)","date":"2021-03-01T00:00:00.000Z","category":"node"},"fields":{"slug":"/nvm-command-not-found/"}}}},"staticQueryHashes":["4278130389"]}